pipeline {
    agent any

    tools {
        maven "maven3.8"  

    }
    stages {
        stage("clone code from git") {
            steps {
                echo "cloning code from git "
                git branch: 'main', credentialsId: 'github_cred2', url: 'https://github.com/sathish108/our_jenkins_pipeline.git'            
            }
        }
        stage('Compiling the Code With Maven3.8') {
	        steps{
	            echo "COMPILING THE CODE"
                script{
		           sh "mvn clean compile" 
		        }   
	        }
	    }
        stage('SonarQube Connection with Jenkins') {
            steps {
                  withSonarQubeEnv('sonar-7') {
                  sh "mvn sonar:sonar \
                  -Dsonar.host.url=http://18.212.239.195:9000 \
                  -Dsonar.login=10c6d80464174bb5e641a5c9ba73bca97fe37eb1"
                  }
            }
        }
        stage('Pulling the SonarQube Code Quality Status') {
            steps {
                  timestamps {
                      script {
                            try{
                       		 def sonar_api_token='10c6d80464174bb5e641a5c9ba73bca97fe37eb1';
                        	 def sonar_project='com.example:java-maven';
                        	 sh """#!/bin/bash +x
                        	 echo "Checking status of SonarQube Project = ${sonar_project}"
                        	 sonar_status=`curl -s -u ${sonar_api_token}: http://18.212.239.195:9000/api/qualitygates/project_status?projectKey=${sonar_project} | grep '{' | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["'projectStatus'"]["'status'"];'`
                        	 echo "SonarQube status = \$sonar_status"

                        	 case \$sonar_status in
                                 "ERROR")
                                 echo "Quality Gate Failed - Major Issues > 0"
                                 echo "Check the SonarQube Project ${sonar_project} for further details."
                                 exit 1
                                 ;;
                                 "OK")
                                 echo "Quality Gate Passed"
                                 echo "Check the SonarQube Project ${sonar_project} for further details."
                                 exit 0
                                 ;;
                                 esac

                                 """

                                 echo 'Code Quality Checks Complete.'
                                  //mark the pipeline as unstable and continue
                                 }
			        
			     catch(e){
                                 currentBuild.result = 'ABORTED'
                                 result = "FAIL"
				 mail bcc: '', body: '''SonarQube Quality Gate failed''', 
			         cc: '', from: '', replyTo: '', subject: 'This Notification is to the Developers Team', to: 'kpvkpv67@gmail.com'
				 throw e
			     }
			         
                    }
                }
           }
       }		
        


        stage('Compile,Test & Package') {
	    steps{
		 script {
			
		    sh "mvn clean package" 
				                   
                 }
	     }	
        }   
	
	    
	
   }
}